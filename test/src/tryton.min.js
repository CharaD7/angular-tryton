"use strict";angular.module("openlabs.angular-tryton",["ngCookies"]).config(["$httpProvider",function($httpProvider){var trytonResponseInterceptor=["$q",function($q){function success(response){return response||$q.when(response)}function error(response){return $q.reject(response)}return function(promise){return promise.then(success,error)}}];$httpProvider.responseInterceptors.push(trytonResponseInterceptor);var trytonResponseTransformer=function(response){return response.hasOwnProperty("result")?response.result:response};$httpProvider.defaults.transformResponse.push(trytonResponseTransformer)}]).factory("tryton",["$http",function($http){var serverUrl="/",rpc=function(method,params,database){var request=$http.post(serverUrl+(database||""),{method:method,params:params||[]});return request},getServerVersion=function(){return rpc("common.version",[null,null])},self={rpc:rpc,getServerVersion:getServerVersion};return self}]).factory("session",["tryton","$cookieStore",function(tryton,$cookieStore){var userId=null,sessionId=null,database=null,login=null,context=null,loadAllFromCookies=function(){userId=$cookieStore.get("userId"),sessionId=$cookieStore.get("sessionId"),database=$cookieStore.get("database"),login=$cookieStore.get("login"),context=$cookieStore.get("context")};loadAllFromCookies();var clearSession=function(){userId=null,sessionId=null,context=null,$cookieStore.remove("userId"),$cookieStore.remove("sessionId"),$cookieStore.remove("context")},setSession=function(_database,_login,_userId,_sessionId){$cookieStore.put("database",_database),$cookieStore.put("login",_login),$cookieStore.put("userId",_userId),$cookieStore.put("sessionId",_sessionId),loadAllFromCookies()},rpc=function(_method,_params,_context){var params=[userId,sessionId].concat(_params||[]),requestContext=angular.copy(context||{});return void 0!==_context&&angular.extend(requestContext,_context),params.push(requestContext),tryton.rpc(_method,params,database)},doLogout=function(){var promise=rpc("common.db.logout");return clearSession(),promise},doLogin=function(_database,_username,_password){var promise=tryton.rpc("common.login",[_username,_password],_database).success(function(result){result&&setSession(_database,_username,result[0],result[1])});return promise};return{doLogin:doLogin,doLogout:doLogout,rpc:rpc,setSession:setSession}}]);